name: Deploy Strapi App

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Set up and deploy infrastructure with Terraform
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.10

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      id: apply
      env:
        TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
      run: terraform apply -auto-approve

    - name: Get EC2 public IP
      id: ec2
      run: echo "EC2_PUBLIC_IP=$(terraform output -raw instance_public_ip)" >> $GITHUB_ENV

  deploy:
    name: Deploy Strapi App
    runs-on: ubuntu-latest
    needs: terraform

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Build Strapi app
      run: npm run build

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/strapi-app:latest .

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/strapi-app:latest

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to EC2
      env:
        EC2_PUBLIC_IP: ${{ env.EC2_PUBLIC_IP }}
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${EC2_PUBLIC_IP} << 'EOF'
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/strapi-app:latest
          docker stop strapi-app || true
          docker rm strapi-app || true
          docker run -d -p 1337:1337 --name strapi-app ${{ secrets.DOCKER_HUB_USERNAME }}/strapi-app:latest
        EOF
